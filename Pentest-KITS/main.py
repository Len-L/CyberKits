import subprocess as qq
from mailtm import Email
import requests
import os
import time

banner = f"""
    \033[32m


        ╭━━━╮╱╱╱╱╱╭╮╱╱╱╱╱╱╭╮╱╭╮╭━┳━━┳━━━━┳━━━╮
        ┃╭━╮┃╱╱╱╱╭╯╰╮╱╱╱╱╭╯╰╮┃┃┃╭┻┫┣┫╭╮╭╮┃╭━╮┃
        ┃╰━╯┣━━┳━╋╮╭╋━━┳━┻╮╭╯┃╰╯╯╱┃┃╰╯┃┃╰┫╰━━╮
        ┃╭━━┫┃━┫╭╮┫┃┃┃━┫━━┫┃╱┃╭╮┃╱┃┃╱╱┃┃╱╰━━╮┃
        ┃┃╱╱┃┃━┫┃┃┃╰┫┃━╋━━┃╰╮┃┃┃╰┳┫┣╮╱┃┃╱┃╰━╯┃
        ╰╯╱╱╰━━┻╯╰┻━┻━━┻━━┻━╯╰╯╰━┻━━╯╱╰╯╱╰━━━╯
"""

while True:
    print(banner)
    print("\033[32m")
    print("1. Scanning")
    print("2. Exploit SSRF")
    print("3. Bypass 403")
    print("4. Parameter Finder [Mining URLS]")
    print("5. Temporary Email [anonim-kit]")
    print("6. MetaData Cleaner [anonim-kit] ")
    print("7. Subdomain Scanner")
    print("8. Online Exploit Finder")
    print("9. Files Sharing")
    print("99. Exit")

    opsi = input("\33[94m[Pentest-KITS]_Options-> ")
    print("\033[32m")

    if opsi=="1":
        IP = input("\33[94mInput IP-> ")
        print("\033[32m")
        qq.run(['nmap', '-sC', '-sV', IP, '-oA', 'scan'])
        with open("scan.nmap", "r") as f:
            data = f.read()
        print(" ")
        if "netbios-ssn" in data:                                   # penambahan
            print("service SMB Detected")
            opsi = input("enumerate SMB (y/n)?  ")
            if "y" in opsi:
                print(" ")
                qq.run(['python3', 'enum-smb.py', IP])
            elif "n" in opsi:
                print("ok")
        print(" ")
        print("==========vulnerability information==========")
        if "Apache httpd 2.4.49" in data:
            print(" ")
            print("Vuln Traversal & RCE >>> 'Apache 2.4.49'")
            li = qq.run(["ls", "CVE"], capture_output=True).stdout.decode()
            if "apache-2.4.49" in li:
                print("Found 1 Exploit Script")
                run = input("\33[94mexploit Now? [y/n]-> ")
                print("\033[32m")
                if run=="y":
                    with open("target.txt", "w") as f:
                        f.write(IP + "\n")
                    while True:
                        print("\33[94m-----------------------------------------")
                        print("to Exit type 'exit' ")
                        command = input("[Pentest-KITS/CVE-2021-41773]_Traversal-> ")
                        print("-----------------------------------------\033[32m")
                        if command=="exit":
                            exit()
                        qq.run(["bash", "CVE/apache-2.4.49.sh", "target.txt", command])
                elif run=="n":
                    print(" ")
            else:
                print("There Is No Exploit Script For This Vuln")
        
        elif "vsftpd 2.3.4" in data:
            print(" ")
            print("Backdoor Command Execution >>> 'vsftpd 2.3.4'")
            li = qq.run(["ls", "CVE"], capture_output=True).stdout.decode()
            if "vsftpd2.3.4" in li:
                print("Found 1 Exploit Script")
                run = input("\33[94mExploit Now? [y/n]-> ")
                print("\033[32m")
                if run=="y":
                    qq.run(["python3", "CVE/vsftpd2.3.4.py", IP])
                elif run=="n":
                    print(" ")
            else:
                print("There Is No Exploit Script For This Vuln")

        elif "Apache httpd 2.4.50" in data:
            print(" ")
            print("Vuln Traversal & RCE >>> 'Apache 2.4.50'")
            li = qq.run(["ls", "CVE"], capture_output=True).stdout.decode()
            if "apache-2.4.50" in li:
                print("Found 1 Exploit Script")
                run = input("exploit Now? [y/n]-> ")
                if run=="y":
                    print("script exploit")
                elif run=="n":
                    print(" ")
            else:
                print("There Is No Exploit Script For This Vuln")

        elif "Backdrop CMS 1.27.1" in data:
            print("")
            print("Backdrop CMS 1.27.1 - Authenticated Remote Command Execution")
            li = qq.run(["ls", "CVE"], capture_output=True).stdout.decode()
            if "backdrop-1.27.1" in li:
                print("Found 1 Exploit Script")
                run = input("exploit Now? [y/n]-> ")
                if run=="y":
                    print(" ")
                    url = input("Input URL Target-> ")
                    qq.run(["python3", "CVE/backdrop-1.27.1.py", url])

                elif run=="n":
                    print(" ")
            else:
                print("There Is No Exploit Script For This Vuln")



        ################Simple 
        elif "ProFTPd 1.3.5" in data:
            print("Vuln 'mod_copy' Remote Command Execution")
            print(" Referensi Script: https://www.exploit-db.com/exploits/49908")
        else:
            print(" ")
            print("Not Vuln")
            print(" ")
        qq.run(['rm', 'scan.gnmap', 'scan.nmap', 'scan.xml'])

    elif opsi=="2":
        print(" ")
        print("Make Sure Your Burpsuite Requests Are in 'ssrf-requests.txt'")
        ssl = input("Target HTTPS OR HTTP? [y/n]-> ")
        if ssl=="y":
            parameter = input("\33[94mInput Parameter-> ")
            print("\033[32m")
            qq.run(['python3', 'ssrf.py', '-r', 'ssrf-requests.txt', '-m', 'readfiles', '-p', parameter, '--ssl', '--uagent', '[CyberKits/Pentest-Kits]', '--level', '5'])

        elif ssl=="n":
            parameter = input("\33[94mInput Parameter-> ")
            print("\033[32m")
            qq.run(['python3', 'ssrf.py', '-r', 'ssrf-requests.txt', '-m', 'readfiles', '-p', parameter, '--uagent', '[CyberKits/Pentest-Kits]', '--level', '5'])
        else:
            print(" ")
            print("There are only 2 choices yes or no :)")

    elif opsi=="3":
        url = input("\33[94murl-> ")
        path = input("path-> ")
        print("\033[32m")
        qq.run(['bash', 'bypass-403.sh', url, path])

    elif opsi=="4":
        domain = input("\33[94mInput Domain-> ")
        print("\033[32m")
        qq.run(['python3', 'parameter.py', '-d', domain])
    
    elif opsi=="5":
        def listener(message):
            print("\nSubject: " + message['subject'])
            print("Content: " + message['text'] if message['text'] else message['html'])
        test = Email()
        print("\nDomain: " + test.domain)
        test.register()
        print("\nyour Email: " + str(test.address))
        test.start(listener, interval=1)
        print("\nwaiting for email.....")
        mail = input("Once finished, type 'y'-> ")
        if mail=="y":
            test.stop()
    
    elif opsi=="6":
        print("\33[94mexample: /home/user/Desktop/Documen-penting.pdf")
        file = input("Enter the location and file name-> ")
        print("\033[32m")
        qq.run(["mat2", file])
    
    elif opsi=="7":
        domain = input("\33[94mDomain-> ")  
        protocol = input("protocol (http or https)-> ")  

        if protocol not in ["http", "https"]:
            print("\033[32mProtocol error, enter 'http' or 'https'.")
            exit()

        script_dir = os.path.dirname(__file__)
        wordlist_file = os.path.join(script_dir, "wordlist.txt")
        with open(wordlist_file, 'r') as f:
            wordlist = [line.strip() for line in f.readlines()]
        print("\033[32m")
        for subdomain in wordlist:
            target = f"{subdomain}.{domain}"
            try:
                url = f"{protocol}://{target}"
                response = requests.head(url, timeout=3)
                if response.status_code == 200:
                    print(f"[+] {target} -> {response.status_code}")
            except requests.exceptions.RequestException:
                pass
        print("====================finished======================")
        input("Enter To Exit")
    
    elif opsi=="8":
        print("To Exit type 'exit' ")
        while True:
            print("\33[94m")
            kunci = input("[Pentest-KITS]_Exploit-Finder-> ")
            print("\033[32m")
            if kunci=="exit":
                exit()
            qq.run(["python3", "pencari_exploit.py", "-s", f"\"{kunci}\"", "--html"])
    
    elif opsi=="9":
        file_path = input("file-> ")
        try:
            with open(file_path, "rb") as file:
                response = requests.post(
                    "https://file.io",
                    files={"file": file}
                )
                if response.status_code == 200:
                    data = response.json()
                    if data.get("success"):
                        print("\033[32m")
                        print(f"[+] File uploaded successfully!")
                        print(f"Download link: {data['link']}")
                        time.sleep(2)
                    else:
                        print(f"[-] Upload failed: {data.get('message', 'Unknown error')}")
                else:
                    print(f"[-] Upload failed with status code: {response.status_code}")
        except FileNotFoundError:
            print(f"Error: File '{file_path}' not found.")
        except Exception as e:
            print(f"Error: {e}")

            
        
            











    elif opsi=="99":
        print(" ")
        break

    else:
        print("Please enter the options according to the numbers provided")
        time.sleep(2)



